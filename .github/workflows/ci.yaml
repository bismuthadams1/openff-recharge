name: tests

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]

    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
    - uses: actions/checkout@v2

    - name: Setup Conda Environment
    - uses: goanpeca/setup-miniconda@v1
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml

        channels: conda-forge,defaults

        activate-environment: test
        auto-update-conda: true
        auto-activate-base: false
        show-channel-urls: true

    - name: Conda Environment Information
      shell: bash -l {0}
      run: |
        conda info
        conda list

    - name: License OpenEye
      shell: bash -l {0}
      run: |

        echo "${SECRET_OE_LICENSE}" > ${OE_LICENSE}
        python -c "from openeye import oechem; assert oechem.OEChemIsLicensed()"

      env:
        SECRET_OE_LICENSE: ${{ secrets.OE_LICENSE }}

    - name: Install Package
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps

    - name: Run Tests
      shell: bash -l {0}
      run: |
        pytest -v --cov=openff --cov-report=xml --color=yes openff/recharge/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
